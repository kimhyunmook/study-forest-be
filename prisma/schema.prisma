// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// npx prisma migrate dev
// npx prisma studio <- gui 여는거

model Study {
  id         String    @id @default(uuid())
  nickName   String
  studyName  String
  introduce  String
  point      Int       @default(0)
  background String    @default("green")
  password   String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  authKey    AuthKey[]
  emojis     Emojis[]
  habit      Habit[]
}

model AuthKey {
  id        String   @id @default(uuid())
  study     Study    @relation(fields: [studyId], references: [id])
  value     String
  studyId   String
  createdAt DateTime @default(now())
}

model Emojis {
  id        String   @id @default(uuid())
  emojiIcon String
  value     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  studyId   String
  study     Study    @relation(fields: [studyId], references: [id])
}

model Habit {
  id         String   @id @default(uuid())
  name       String   @default("noName")
  monday     Boolean  @default(false)
  tuesday    Boolean  @default(false)
  wendnesday Boolean  @default(false)
  thursday   Boolean  @default(false)
  friday     Boolean  @default(false)
  saturday   Boolean  @default(false)
  sunday     Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  studyId    String
  study      Study    @relation(fields: [studyId], references: [id])
}

//오늘의 습관 목록 데이터 (동재)
model todayHabit {
  id String @id @default(uuid())
  name String @unique
  createdAt DateTime @default(now()) //추가했을시 
  updatedAt DateTime @updatedAt // 업데이트시
  isActive Boolean @default(true) // 활성 상태 확인
  checks todayHabitCheck[]
}

model todayHabitCheck {
  id String @id @default(uuid())
  habitId String
  checkDate DateTime
  isChecked Boolean @default(false) //비활성 상태

  habit todayHabit @relation(fields: [habitId], references: [id], onDelete: Cascade)
}